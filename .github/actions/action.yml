name: Build
description: Build app image
inputs:
  secret_github_token:
    description: github token
    required: true
runs:
  using: "composite"
  steps:
    - name: Extract Version
      shell: bash
      id: extract_version_step
      run: |
        echo "tag=${GITHUB_REF#refs/*/}" >> "$GITHUB_OUTPUT"
    - name: Print Version
      shell: bash
      run: |
        echo ${{ steps.extract_version_step.outputs.tag }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        #          platforms: linux/amd64,linux/arm64
        platforms: linux/amd64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Github Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.secret_github_token }}
    - name: Prepare Docker Build Env
      shell: bash
      run: |
        echo IMAGE_NAME=$(echo ${{ steps.extract_version_step.outputs.tag }} | rev | cut -d'-' -f2-  | rev) >> $GITHUB_ENV
        echo IMAGE_TAG=$(echo ${{ steps.extract_version_step.outputs.tag }} | rev | cut -d"-" -f1  | rev) >> $GITHUB_ENV
    - name: Prepare APP_RELATIVE_PATH
      shell: bash
      run: |
        echo APP_RELATIVE_PATH=$(echo "$(echo ${{env.IMAGE_NAME}} | rev | cut -d'-' -f2-  | rev)/$(echo ${{env.IMAGE_NAME}} | rev | cut -d"-" -f1  | rev)") >> $GITHUB_ENV
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        file: 'deploy/build/Dockerfile'
        #          platforms: linux/amd64,linux/arm64
        platforms: linux/amd64
        push: true
        tags: ghcr.io/${{ github.actor }}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
        build-args: APP_RELATIVE_PATH=${{env.APP_RELATIVE_PATH}}
